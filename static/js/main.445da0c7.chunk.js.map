{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,qCACA,8CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OAAO,gCAAQJ,KAmBFS,E,4JAfb,WACE,MAA2CC,KAAKX,MAAxCE,EAAR,EAAQA,cAAeO,EAAvB,EAAuBA,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,cAAeA,EACfO,gBAAiBA,W,GATPG,a,OCoBLC,E,4MA/CbC,aAAe,CACbR,KAAM,GACNC,IAAK,I,EAGPQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGd,EAAOa,K,EAIZE,WAAa,WACX,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGrB,WACE,MAAsBH,KAAKI,MAAnBT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,iCACE,uBAAOgB,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eAEjB,uBAAOO,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eAEjB,uBAAOQ,KAAK,SAASL,MAAM,SAASX,QAASG,KAAKU,oB,GA1CvCT,aCsCJe,E,4MAnCbZ,MAAQ,CACNa,WAAY,I,EAGdnB,gBAAkB,SAACJ,GACjB,IAAQuB,EAAe,EAAKb,MAApBa,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBiB,aAAe,SAACQ,GACd,EAAKV,SAAS,CAACQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,4CAKxD,WACE,IAAQF,EAAejB,KAAKI,MAApBa,WAER,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CACE9B,cAAe0B,EACfnB,gBAAiBE,KAAKF,kBAExB,cAAC,EAAD,CAAMa,aAAcX,KAAKW,sB,GA9BfV,a,MCClBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.445da0c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  );\n};\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nclass Table extends Component {\n  render() {\n    const { characterData, removeCharacter } = this.props;\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody\n          characterData={characterData}\n          removeCharacter={removeCharacter}\n        />\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  state = this.initialState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [],\n  };\n\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n\n  handleSubmit = (character) => {\n    this.setState({characters: [...this.state.characters, character]})\n  }\n\n\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}